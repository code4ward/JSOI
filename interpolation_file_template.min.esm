#!/usr/bin/env node
import{readFile as t,writeFile as e}from"fs/promises";import s from"path";class i{static isWhitespace(t){return/\s/.test(t)}static isOpen(t){return"("===t}static isClose(t){return")"===t}static isCurlyOpen(t){return"{"===t}static isCurlyClose(t){return"}"===t}static isArgSeparate(t){return","===t}static isSquareOpen(t){return"["===t}static isSquareClose(t){return"]"===t}static isGroupTokenBegin(t){return"'"===t||'"'===t||"["===t||"{"===t}static isMatchingGroupTokenEnd(t,e){return"'"===t?"'"===e:'"'===t?'"'===e:"["===t?"]"===e:"{"===t?"}"===e:void 0}constructor(t){this._expression=t,this._index=0}notifyParseStart(){this._index=0}notifyParseComplete(t){}getI(){return this._index}getExpr(){return this._expression}cAtI(t=0){return this.getExpr()[this._index+t]}cAtIIsWhite(){return i.isWhitespace(this.cAtI())}skip(t=1){return this._index+=t}hasChars(t=1){return this.getExpr().length-this._index>=t}cAtIisCurlyOpen(){return i.isCurlyOpen(this.cAtI())}cAtIisCurlyClose(){return i.isCurlyClose(this.cAtI())}cAtIOIsOpen(){return i.isOpen(this.cAtI())}cAtIOIsClose(){return i.isClose(this.cAtI())}cAtIIsArgSeporator(){return i.isArgSeparate(this.cAtI())}cAtIIsGroupTokenEnd(t){return i.isMatchingGroupTokenEnd(t,this.cAtI())}cAtIIsTag(t){let e=!1;const s=t.length;if(this.hasChars(s)){let i=0;for(let e=0;e<t.length;e++)this.cAtI(e)===t[e]&&i++;e=i===s}return e}skipWhitespace(){for(;this.hasChars()&&this.cAtIIsWhite();)this.skip()}}class r extends i{constructor(t,e={}){super(t),this._options=e,this._startTag="{{",this._endTag="}}",this._ignoreEnclosed={Opens:["{"],Closes:["}"]},this._curlyBracketStack=[],this._replacementEdits=[],this._options.TrackCurlyBrackets=void 0!==this._options.TrackCurlyBrackets&&this._options.TrackCurlyBrackets}getTrackCurlyBrackets(){return this._options.TrackCurlyBrackets}createTemplateKey(t){return`${this._startTag}${t}${this._endTag}`}cAtIIsBeginTag(){return this.cAtIIsTag(this._startTag)}cAtIIsEndTag(){let t=!1;return 0===this._curlyBracketStack.length&&(t=this.cAtIIsTag(this._endTag)),t}cAtIisOpen(){let t;const e=this._ignoreEnclosed.Opens.indexOf(this.cAtI());return-1!==e&&(t=this._ignoreEnclosed.Closes[e]),t}cAtIisClosing(){let t=!1;if(this._curlyBracketStack.length>0){const e=this._curlyBracketStack[this._curlyBracketStack.length-1];this.cAtI()===e&&(t=!0)}return t}trackEnclosedChars(){if(this.getTrackCurlyBrackets()){const t=this.cAtIisOpen();void 0!==t?this._curlyBracketStack.push(t):this.cAtIisClosing()&&this._curlyBracketStack.pop()}}parseToken(){let t,e=-1,s=-1,i=-1,r=-1;for(;this.hasChars();)if(this.cAtIIsBeginTag())i=this.getI(),this.skip(this._startTag.length),e=this.getI();else{if(-1!==e&&this.cAtIIsEndTag()){s=this.getI(),r=s+this._endTag.length,t=this.getExpr().slice(e,s),this.skip(this._endTag.length);break}this.trackEnclosedChars(),this.skip()}return void 0!==t?{Match:this.createTemplateKey(t),Key:t,IStartToken:i,IEndToken:r}:void 0}applyReplacementEdits(){return a.customStringReplacer(this.getExpr(),this._replacementEdits)}}class a extends r{static customStringReplacer(t,e){let s="",i=0;for(let r=0;r<e.length;r++){const{ReplaceWith:a,IStartToken:n,IEndToken:o}=e[r];s+=t.slice(i,n),s+=a,i=o}return s+=t.slice(i),s}constructor(t,e,s={}){super(t,s),this._cb=e}notifyParseResult(t){const e=t.Match,s=t.Key,i=t.IStartToken;t.ReplaceWith=this._cb(this,e,s,i,this.getExpr()),this._replacementEdits.push(t)}applyReplacementEdits(){return a.customStringReplacer(this.getExpr(),this._replacementEdits)}replace(){this.notifyParseStart();let t=this.parseToken();for(;void 0!==t;)this.notifyParseResult(t),t=this.parseToken();if(this._curlyBracketStack.length>0)throw new Error(`Match Error - unbalanced symbols missing: ${this._curlyBracketStack.join(",")}`);return this.notifyParseComplete(t),this.applyReplacementEdits()}}class n{static isPromise(t){let e=!1;return null!==t&&"object"==typeof t&&"function"==typeof t.then&&(e=!0),e}constructor(){this._promises=[],this._promiseKeys=[],this._matchedOn=[],this._nextKeyId=0}hasPromises(){return this._promises.length>0}allSettled(){return Promise.allSettled(this._promises)}async processPromises(){let t;if(this.hasPromises()){t={NResolved:0,NRejected:0};const e=await this.allSettled();for(let s=0;s<e.length;s++){const i=this._promiseKeys[s],r=e[s];"fulfilled"===r.status?(t[i]=r.value,t.NResolved++):"rejected"===r.status&&(t[i]=this._matchedOn[s],t.NRejected++)}}return t}getNextPromiseKey(){const t=`${this._nextKeyId}__@uniquePKey@__${this._nextKeyId}`;return this._nextKeyId++,t}add(t,e){let s;return n.isPromise(e)&&(this._matchedOn.push(t),this._promises.push(e),s=this.getNextPromiseKey(),this._promiseKeys.push(s)),s}}const o=Object.freeze({CovertValueToType:!0});class c{constructor(t){this._keyValues=t}getKeyValues(){return this._keyValues}get(t){return this._keyValues[t]}}class l{constructor(t,e,s={}){this._templateStr=t,this._keyValuesI=e instanceof c?e:new c(e),this._options=s,this._options.CovertValueToType=void 0===this._options.CovertValueToType?o.CovertValueToType:this._options.CovertValueToType,this._options.ReplaceNotFoundHandler=void 0!==this._options.ReplaceNotFoundHandler?this._options.ReplaceNotFoundHandler:(t,e)=>t}getOptionConvertType(){return this._options.CovertValueToType}getOptionReplaceNotFoundHandler(){return this._options.ReplaceNotFoundHandler}getValueInMap(t){return this._keyValuesI.get(t)}async doReplaces(t,e){let s;const i=new n,r=new a(t,((t,r,a,n,o)=>{let c=e.getValueInMap(a.trim());void 0===c&&e.canInvokeNotFoundHandler()&&(c=this.getOptionReplaceNotFoundHandler()(r,a));const l=i.add(r,c);return void 0!==l?c=t.createTemplateKey(l):this.getOptionConvertType()&&r===o?s=c:null!==c&&"object"==typeof c&&(c=JSON.stringify(c)),c}),this._options).replace();let o;const c=await i.processPromises();return void 0!==c&&(o=await this.doReplaces(r,{getValueInMap:t=>c[t],canInvokeNotFoundHandler:()=>!1})),o=o||(void 0!==s?s:r),o}async sInterpolate(){let t=this._templateStr;return"string"==typeof t&&(t=await this.doReplaces(t,{getValueInMap:t=>this.getValueInMap(t),canInvokeNotFoundHandler:()=>!0})),t}}class h{static parseReplaceParams(t){const e={};return t.split(";").forEach((t=>{const[s,i]=t.split("=");s&&i&&(e[s.trim()]=i.trim())})),e}static logUsageExit(){console.info("Replace template parameters in a file:"),console.info(`  Usage: ${s.basename(process.argv[0])} ${s.basename(process.argv[1])} <templateFileName> <outputFileName> <Key1=value1; Key2=value2; ...>`),process.exit(1)}constructor(){if(this._templateFileName="",this._outputFileName="",this._replaceParams={},process.argv.length>4){this._templateFileName=process.argv[2],this._outputFileName=process.argv[3];const t=process.argv.slice(4).join(" ");this._replaceParams=h.parseReplaceParams(t)}else h.logUsageExit()}async main(){try{const s=await t(this._templateFileName,"utf8"),i=new l(s,this._replaceParams,{TrackCurlyBrackets:!1}),r=await i.sInterpolate();await e(this._outputFileName,r,"utf8"),console.log(`File content written successfully to: ${this._outputFileName}`)}catch(t){console.error("Error processing the file:",t.message),h.logUsageExit()}}}(async()=>{await(new h).main()})();
//# sourceMappingURL=interpolation_file_template.min.esm.map
